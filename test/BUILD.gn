# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")

# test unittest
ohos_unittest("dslm_test") {
  install_enable = true
  testonly = true
  part_name = "devicesecuritylevel"
  subsystem_name = "security"
  module_out_path = "${root_out_dir}/${subsystem_name}/${part_name}"

  sources = [
    "//base/security/devicesecuritylevel/oem_property/ohos/dslm_ohos_credential.c",
    "//base/security/devicesecuritylevel/service/sa/common/dslm_rpc_process.c",
    "dslm_msg_interface_mock.cpp",
    "dslm_request_callback_mock.cpp",
    "dslm_test.cpp",
  ]

  include_dirs = [
    "//base/security/devicesecuritylevel/common/include",
    "//base/security/devicesecuritylevel/interfaces/include",
    "//base/security/devicesecuritylevel/service/include",
    "//base/security/devicesecuritylevel/service/dslm",
    "//base/security/devicesecuritylevel/service/sa/common",
    "//base/security/devicesecuritylevel/baselib/msglib/include/",
  ]

  deps = [
    "//base/security/devicesecuritylevel/baselib/utils:utils_static",
    "//base/security/devicesecuritylevel/oem_property/ohos:dslm_ohos_cread_obj",
    "//base/security/devicesecuritylevel/service/bigdata:service_bigdata_obj",
    "//base/security/devicesecuritylevel/service/common:service_common_obj",
    "//base/security/devicesecuritylevel/service/dslm:service_dslm_test_obj",
    "//base/security/devicesecuritylevel/service/msg:service_msg_obj",
    "//third_party/googletest:gmock",
  ]

  deps += [ "//base/security/devicesecuritylevel/interfaces:dslm_sdk" ]

  external_deps = [ "utils_base:utils" ]

  if (is_standard_system) {
    external_deps += [ "hilog_native:libhilog" ]
  }

  if (is_large_system) {
    external_deps += [ "hilog:libhilog" ]
  }

  # cflags = [ "-fsanitize=address" ]
  # cflags += [ "-fno-omit-frame-pointer" ]
  # cflags += [ "-fsanitize-address-use-after-scope" ]
  # ldflags = [ "-fsanitize=address" ]
}
